<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>my new post01</title>
      <link href="/my-new-post01/"/>
      <url>/my-new-post01/</url>
      <content type="html"><![CDATA[<h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="第一节-什么是指针"><a href="#第一节-什么是指针" class="headerlink" title="第一节 什么是指针"></a>第一节 什么是指针</h3><p>关于指针一词，在K&amp;R C中，有下面这样的说明。</p><ul><li>指针是一种保存变量地址的变量，在C中频繁地使用。</li></ul><p>照字面意思来说，很容易把指针当成<strong>变量</strong>。但实际上并非如此。</p><p>此外，说道<strong>pointer</strong>,就离不开<strong>pointer type</strong>。但提到type，立刻就会让人想起“int type”,”double type”等。</p><p>所以，再回来说pointer type,他不是单独存在的，它是由其他类型派生而成的。所以说“int *”即<strong>指向int的pointer type</strong></p><p>因为pointer type是type，所以它和int type，double type是一样的。也存在<strong>Pointer variable</strong>，<strong>Pointer value</strong>。</p><pre><code>*要点*：先有“point type,”所以有了&quot;pointer variable&quot;与“pointer value”。</code></pre><p>例如，在C languange中。</p><pre><code>int a = 123；</code></pre><p>int 是”type”， a是”int variable”，4 是“int type value”<br>同理：</p><pre><code>int *p = &amp;xiaoming</code></pre><p>int *是“type”，p是“pointer variable”， xiaoming该变量的地址称为“pointer type value”。</p><hr><h3 id="第二节-地址与“-amp-”"><a href="#第二节-地址与“-amp-”" class="headerlink" title="第二节 地址与“&amp;”"></a>第二节 地址与“&amp;”</h3><p>几乎所有的处理程序中，所谓的“pointer type value”，实际是指内存的地址（Memory address）<br>变量的内容是保存在内存的某个地方的，“某个地方”的说法总是会让人产生困惑。因此，就像送快递的时候使用“门牌号”确定“地址”一样，在内存中，我们也给变量分配“门牌号”。在C的内存世界中，“门牌号”被称为地址。</p><pre><code>#include &lt;stdio.h&gt; int main(){    int Rose = 23;    int Jack = 25;    int *Rose_P;    /*输出Rose，Jack和Rose_P的住址在哪里*/    printf(&quot;&amp;Rose..%p\n&quot;,&amp;Rose);    printf(&quot;&amp;Jack..%p\n&quot;,&amp;Jack);    printf(&quot;&amp;Rose_P..%p\n&quot;,&amp;Rose_P);    /*将Rose家的住址赋予Rose_P*/    Rose_P = &amp;Rose;    printf(&quot;Rose_P..%p\n&quot;,Rose_P);    /*通过Rose_P输出Rose的值*/    printf(&quot;*Rose_P..%d\n&quot;,*Rose_P);        /*注意,Rose的值是int type，所以用“%d” */    /*十年过去了，Rose多大了呢，户口的年龄加10了，她的真正年龄呢*/    *Rose_P += 10;    printf(&quot;Rose..%d\n&quot;, Rose);    return 0;}</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12973678-9a48d897dca0557c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ截图20180704225429.png"></p>]]></content>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Atom Debug及中文界面</title>
      <link href="/Atom_setting/"/>
      <url>/Atom_setting/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> 编程 </category>
          
          <category> 文本编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>明解C语言 第0章 前言</title>
      <link href="/My-new-post/"/>
      <url>/My-new-post/</url>
      <content type="html"><![CDATA[<h2 id="读书博客的第一篇前言"><a href="#读书博客的第一篇前言" class="headerlink" title="读书博客的第一篇前言"></a>读书博客的第一篇前言</h2><h3 id="作为程序员-我很开心"><a href="#作为程序员-我很开心" class="headerlink" title="作为程序员 我很开心"></a>作为程序员 我很开心</h3><p>本人作为刚刚加入编程大家庭的一员”萌新”。心底不时悠悠泛起激荡之感。一方面徜徉在知识的海洋中，这对从小求知欲旺盛的我，犹如“海阔凭鱼跃，天高任鸟飞”。但另一方面，因为本人领悟能力和记忆能力的些许不足，很多内容完全体会不禁有些吃力。只能用笨办法：多看，多记，多练。而写一篇读书博客是我想到的其中办法。不仅可以提高知识归纳能力，而且可以提高技术文档的写作能力。甚至多打打字也可以多熟悉熟悉键盘，毕竟盲打是咱们吃饭的“饭碗”啊。</p><h3 id="有难点不能忘和假装会"><a href="#有难点不能忘和假装会" class="headerlink" title="有难点不能忘和假装会"></a>有难点不能忘和假装会</h3><p>C语言是很多人第一门学的编程语言，我也不例外（也许以后很多人会从Python学起吧）。而第一个让我头疼无比的莫过于<strong>指针</strong>。很多东西就是说起来不难，定义就是这么几句话。但离融会贯通有时候就差那么一口气。一个东西是否知其所以然自己最明白。也许，一天早上突然一篇文章。或者是，一行开源代码。又或者是别人不经意的一句话。让我们把疑惑解开。（想起了少年包青天那首歌，哈哈）总之，“指针”是我第一个难题。但这本<code>《征服C指针》</code>让我离知其所以然，迈进了一大步。</p><h3 id="书是神圣滴-要爱护它"><a href="#书是神圣滴-要爱护它" class="headerlink" title="书是神圣滴 要爱护它"></a>书是神圣滴 要爱护它</h3><p>写读书笔记的初衷不是为了<strong>盗版</strong>，而是为了能让大家看到这本书的独到之处。管中窥豹，笔者尚能有所感触。本文并没有手码所有书籍部分，而是提炼核心部分并稍加修改。为避免枯燥，笔者会和大家聊天调侃的方式进行续写。但涉及到代码时，保持跟原书一致。个人心得体会如有误差，请及时提出。笔者虚心接受修改。</p><p><strong>参考书籍 —《征服C指针》 前桥和弥 人民邮电出版社</strong></p>]]></content>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/    issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Test for Hexo</title>
      <link href="/hello%20home/"/>
      <url>/hello%20home/</url>
      <content type="html"><![CDATA[<p>Hexo Test.</p>]]></content>
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PS3 </tag>
            
            <tag> Games </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
